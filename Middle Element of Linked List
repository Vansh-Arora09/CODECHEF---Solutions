Find Middle Element of Linked List
You are given the head of a singly linked list 
A
A of length 
N
N. The values in the list are 
A
1
,
A
2
,
…
,
A
N
A 
1
​
 ,A 
2
​
 ,…,A 
N
​
  respectively. You need to find the value of the middle element of the linked list.

The middle element of a linked list of length 
N
N is the 
(
⌊
N
2
⌋
+
1
)
(⌊ 
2
N
​
 ⌋+1)-th element from the head of the list.

Input Format
The first line of the input contains a single integer 
T
T - the number of test cases. The description of 
T
T test cases follows.

The first line of each test case contains a single integer 
N
N.

The second line of each test case contains 
N
N space-separated integers 
A
1
,
A
2
,
…
,
A
N
A 
1
​
 ,A 
2
​
 ,…,A 
N
​
 .

Output Format
For each test case, the function you complete should return the value of the middle element of the list.
Note: You need to complete the function getMiddleElement to solve the problem.

Constraints
1
≤
T
≤
100
1≤T≤100
1
≤
N
≤
1
0
5
1≤N≤10 
5
 
1
≤
A
i
≤
1
0
9
1≤A 
i
​
 ≤10 
9
  for each valid 
i
i
the sum of 
N
N over all test cases does not exceed 
2
⋅
1
0
5
2⋅10 
5
 
Sample 1:
Input
Output
3
5
1 2 3 4 5
6
1 2 3 4 5 6
4
10 1 6 12
3
4
6
Explanation:
Example case 1: The value of the middle element is 
A
3
=
3
A 
3
​
 =3.

Example case 2: The value of the middle element is 
A
4
=
4
A 
4
​
 =4.

Example case 3: The value of the middle element is 
A
3
=
6
A 
3
​
 =6.
